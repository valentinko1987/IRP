<?xml version="1.0" encoding="UTF-8"?>
<meta-runner name="SonarQube Branch or PR Prepare">
  <description>Prepare SonarQube Branch or PR analysis parameters from GitHub VCS buid information (i.e.: Manage 'sonar.branch.XXX' and 'sonar.pullrequest.XXX' parameters automatically).</description>
  <settings>
    <parameters />
    <build-runners>
      <runner name="" type="Ant">
        <parameters>
          <param name="build-file"><![CDATA[<!-- Ant job, to be Windows/Linux compatible -->
<project default="configureSonarQubeScannerParams">
    <!-- Input TeamCity parameters -->
	<echo level="info" message="%vcsroot.url%" />
	<echo level="info" message="%vcsroot.branch%" />
	<echo level="info" message="%teamcity.build.branch%" /> 
	<echo level="info" message="%teamcity.build.branch.is_default%" /> 
	<echo level="info" message="%teamcity.pullRequest.number%" />
	<echo level="info" message="%teamcity.pullRequest.target.branch%" /> 
	<echo level="info" message="%teamcity.pullRequest.title%" />

    <property name="vcsroot.url" value="%vcsroot.url%" />
    <property name="vcsroot.branch" value="%vcsroot.branch%" />
    <property name="teamcity.build.branch" value="%teamcity.build.branch%" />
    <property name="teamcity.build.branch.is_default" value="%teamcity.build.branch.is_default%" />
    <property name="teamcity.pullRequest.number" value="%teamcity.pullRequest.number%" />
    <property name="teamcity.pullRequest.target.branch" value="%teamcity.pullRequest.target.branch%" />
    <property name="teamcity.pullRequest.title" value="%teamcity.pullRequest.title%" />
    <!-- Matching process (PR vs branch) -->
    <condition property="isPullRequest">
        <and>
            <isfalse value="${teamcity.build.branch.is_default}"/>
            <matches string="${teamcity.pullRequest.number}" pattern="[0-9]+" />
        </and>
    </condition>
    <condition property="isBranch">
        <and>
            <isfalse value="${teamcity.build.branch.is_default}"/>
            <not>
                <matches string="${teamcity.pullRequest.number}" pattern="[0-9]+" />
            </not>
        </and>
    </condition>
    <!-- Branch or Pull Request parameters extraction (in property 'sonarQubeScannerParameters') -->
    <target name="configurePullRequest" if="isPullRequest">
        <loadresource property="repo">
            <propertyresource name="vcsroot.url" />
            <filterchain>
                <tokenfilter>
                    <replaceregex pattern=".*github.*/([-\w]*)/([-\w]*)(\.git)?" flags="s" replace="\1/\2" />
                    <replaceregex pattern="git@github.*:([-\w]*)/([-\w]*)(\.git)?" flags="s" replace="\1/\2" />
                </tokenfilter>
            </filterchain>
        </loadresource>
        <loadresource property="teamcityPullRequestTitleEscaped">
            <propertyresource name="teamcity.pullRequest.title"/>
            <filterchain>
                <tokenfilter>
                    <replacestring from="|" to="||"/>
                    <replacestring from="'" to="|'"/>
                    <replacestring from="[" to="|["/>
                    <replacestring from="]" to="|]"/>
                </tokenfilter>
            </filterchain>
        </loadresource>
        <echo level="info" message="Repository: '${repo}', Pull-request: '${teamcity.pullRequest.number}', Title: '${teamcity.pullRequest.title}', Target branch: '${teamcity.pullRequest.target.branch}'" />
        <property name="sonarQubeScannerParameters" value="{ &quot;sonar.pullrequest.key&quot; : &quot;${teamcity.pullRequest.number}&quot;, &quot;sonar.pullrequest.branch&quot; : &quot;${teamcityPullRequestTitleEscaped}&quot;, &quot;sonar.pullrequest.base&quot; : &quot;${teamcity.pullRequest.target.branch}&quot;, &quot;sonar.pullrequest.provider&quot; : &quot;github&quot;, &quot;sonar.pullrequest.github.repository&quot; : &quot;${repo}&quot; }" />
    </target>
    <target name="configureBranch" if="isBranch">
        <loadresource property="target">
            <propertyresource name="vcsroot.branch" />
            <filterchain>
                <tokenfilter>
                    <replaceregex pattern="refs/heads/(.*)" flags="s" replace="\1" />
                </tokenfilter>
            </filterchain>
        </loadresource>
        <echo level="info" message="Branch: '${teamcity.build.branch}', Target: '${target}'" />
        <property name="sonarQubeScannerParameters" value="{ &quot;sonar.branch.name&quot; : &quot;${teamcity.build.branch}&quot;, &quot;sonar.branch.target&quot; : &quot;${target}&quot; }" />
    </target>
    <!-- Check if SonarQube Scanner parameters should be written (false when 'master' or default branch) -->
    <target name="checkIfshouldAddSonarQubeParams">
        <condition property="shouldAddSonarQubeParams">
            <isset property="sonarQubeScannerParameters" />
        </condition>
    </target>
    <!-- Main process -->
    <target name="configureSonarQubeScannerParams" depends="configurePullRequest,configureBranch,checkIfshouldAddSonarQubeParams"
        if="shouldAddSonarQubeParams">
        <echo level="info" message="##teamcity[setParameter name='env.SONARQUBE_SCANNER_PARAMS' value='${sonarQubeScannerParameters}']" />
    </target>
</project>]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use-custom-build-file" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <requirements />
  </settings>
</meta-runner>

