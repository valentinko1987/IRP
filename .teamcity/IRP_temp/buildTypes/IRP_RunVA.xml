<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="3bf573aa-328e-4ce4-a518-9f792121a08c" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2020.1/project-config.xsd">
  <name>RunVA</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="Cover.xml" />
    </options>
    <parameters>
      <param name="env.Database1CName" value="%dep.IRP_GitHubUpdate.env.Database1CName%" />
      <param name="env.OScript" value="C:/Program Files/OneScript" />
      <param name="env.VA.FeaturePath" value="%system.teamcity.build.workingDir%/feature" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_7" name="" type="jetbrains_powershell">
        <conditions>
          <equals name="dep.IRP_GitHubUpdate.env.StartVA" value="true" />
        </conditions>
        <parameters>
          <param name="jetbrains_powershell_execution" value="PS1" />
          <param name="jetbrains_powershell_noprofile" value="true" />
          <param name="jetbrains_powershell_script_code"><![CDATA[$allurePath = "%system.teamcity.build.workingDir%/allure" | ForEach-Object { $_ -replace '\\', '/'}
$irfvpath = "%teamcity.tool.iview%/i_view32.exe" | ForEach-Object { $_ -replace '\\', '/'}
$text = "{
	'Version': '1.2.035.1',
	'Lang': 'en',
	'DebugLog': false,
	'VersionVA': 'ver 1.2.035.1',
	'addtofeaturefilter': false,
	'recordtestrunvideo': false,
	'thenumberofframesofvideotestsession': 5,
	'testrecordingvideocommand': 'ffmpeg',
	'DownloadFeaturesOpen': 1,
	'platformversiongenerateepf': 'C:\\Program Files\\1cv8\\8.3.18.1334\\bin\\',
	'usersettingsprovider': 'FILE',
	'usevanessaeditor': true,
	'vanessaeditortheme': 'vs',
	'usecurrentformdatawhenselectingsteps': false,
	'showsubscenariolines': true,
	'showcodeminiature': true,
	'replacetabswithspaces': false,
	'RunningScripts': {
		'makestepsasync': false,
		'SpacingStepSpecifiedUser': 0.1,
		'updatestatistics': true,
		'updatetreewhenscenariostarts': true,
		'stoponerror': false,
		'showrownumberonerror': false,
		'pendingequalfailed': false,
		'dosleepusingping': false,
		'timeoutforasynchronoussteps': 10,
		'timetofindwindow': 10,
		'numberofattemptstoperformanaction': 3,
		'safeexecutionofsteps': false,
		'pauseonwindowopening': 0
	},
	'TestClient': {
		'runtestclientwithmaximizedwindow': true,
		'testclienttimeout': 25,
		'testclientports': '',
		'forceclosetestclient': true,
		'timeoutbeforeforciblyclosingtestclient': 10,
		'testclientdebug': false,
		'testclientdebugkeys': '',
		'testclientdebugaddress': '',
		'datatestclients': [
        {
        'Name': 'This client',
        'PathToInfobase': '/Slocalhost/%env.Database1CName%',
        'PortTestClient': 48001,
        'AddItionalParameters': '%env.LoginTo1C% %env.PassTo1C% /Len /UseHwLicenses+ /TComp -SDC /DisableStartupMessages /DisplayPerformance /DisplayAllFuntions /EnableCheckModal /EnableCheckExtensionsAndAddInsSyncCalls /DEBUG -http -attach /DEBUGGERURL http://localhost:1550',
        'ClientType': 'Thin',
        'ComputerName': 'localhost'
        }
        ]
	},
	'allurecreatereport': true,
	'AllureReport': {
		'allurepath': '$allurePath/tmp',
		'allurepathbase': '$allurePath/base',
		'reportlevel1': '#report.epic=;catalog1',
		'reportlevel2': '#report.feature=;catalog2',
		'reportlevel3': '#report.story=;scenarioname',
		'testsuites': '',
		'attacheventlogtotheallurereport': true,
		'attachactiveformdatatotheallurereport': true,
		'attachvariablestotheallurereport': false,
		'attachallformsdatatotheallurereport': false,
		'attachnetworkconnectiondatatotheallurereport': false,
		'attachdataoftheoperatingsystemprocessestotheallurereport': false,
		'tagsskippingscript': '',
		'directorytobuildhierarchy': '',
		'DataAllureMarks': []
	},
	'junitcreatereport': false,
	'JUnitReport': {
		'junitpath': ''
	},
	'cucumbercreatereport': false,
	'CucumberReport': {
		'cucumberreportpath': ''
	},
	'ModelingCreateReport': false,
	'htmlcreate': false,
	'HTMLInstruction': {
		'htmlpath': ''
	},
	'markdowncreate': false,
	'MarkdownInstruction': {
		'markdownpath': ''
	},
	'simplereport': false,
	'librarycatalogs': [
		'C:\\Program Files\\OneScript\\lib\\vanessa-automation\\features\\Libraries'
	],
	'ignoretags': [
		'IgnoreOnCIMainBuild'
	],
	'logtogr': false,
	'logtotext': false,
	'logstepstotext': false,
	'fulllog': false,
	'soundnotificationwhenscriptends': false,
	'showbookmarkstop': false,
	'logerrorstotext': false,
	'getactiveformdataonerror': false,
	'getallformsdataonerror': false,
	'collectnetworkconnectiondata': false,
	'collectdataoftheoperatingsystemprocesses': false,
	'usebrowserwebsocket': false,
	'emulatemousemovementswithVanessaExt': false,
	'emulatekeyboardinputwithVanessaExt': false,
	'hrizontaloffset': 0,
	'verticaloffset': 0,
	'thenumberofstepswhenmovingthemouse': 150,
	'timeoutbetweenstepswhenmovingthemouse': 3,
	'hlightmouseclicksinbrowser': false,
	'mouseclickhighlightcolor': 255,
	'mouseclickhighlightradius': 30,
	'mouseclickhighlightduration': 12,
	'mouseclickhighlightwidth': 12,
	'mouseclickhighlighttransparency': 127,
	'ignorebrowsersearcherrors': false,
	'scalefactor': 1,
	
	'useaddin': false,
	'useaddinforscreencapture': false,
	'screencaptureaddinmethod': 0,
	'onerrorscreenshot': false,
	'onerrorscreenshoteverywindow': false,
	'videocreate': false,
	'VideoRecording': {
		'videopath': '',
		'comandrecvideo': '',
		'videocapturetool': 'ffmpeg',
		'screenwidth': 0,
		'screenheight': 0,
		'screenleft': 0,
		'screentop': 0,
		'fps': 0,
		'mousecurfile': '',
		'showframe': false,
		'movemouse': false,
		'tempfolderforvideo': '',
		'watermarkfile': '',
		'ffmpegcomand': '',
		'convertcomand': '',
		'musicpath': '',
		'musicvolume': 0,
		'dotts': false,
		'ttstype': 0,
		'yandexttslanguage': '',
		'yandexttsvoice': '',
		'yandexttsemotion': '',
		'yandexttsspeed': 0,
		'yandexttsfolderId': '',
		'yandexttsoauthtoken': '',
		'yandexttsquerytype': 0,
		'ttsttsvoice': '',
		'ttsttsengine': '',
		'ttsttslanguage': '',
		'amazonttsregion': 'us-east-1',
		'ttsttskey': '',
		'ttsttssecretkey': '',
		'audioenginetts': '',
		'ttsvoice': '',
		'changewordslib': [],
		'groupofstepsasastep': false,
		'disablescalingofsteps': false,
		'highlightmouseclicks': false,
		'turnofffeaturetitleslide': false,
		'turnoffscenarioslide': false,
		'turnofffinalslide': false,
		'emulatekeyboardinput': false,
		'hideservicewindows': false,
		'speedofspeech': 0,
		'cachettsfiles': false,
		'ttsfilescache': '',
		'cachevideo': false,
		'videocachepath': '',
		'addsubtitles': false,
		'accelerationpercentage': 0,
		'instructiontypevideo': true,
		'instructiontypehtml': false,
		'instructiontypemarkdown': false,
		'emulatemousemovement': false,
		'changefeaturetitleslide': false,
		'featuretitleslidepath': '',
		'addmusictofeaturetitleslide': false,
		'changefinalslide': false,
		'finalslidepath': '',
		'addmusictofinalslide': false
	},
	'usesikulixserver': false,
	'SikuliXServer': {
		'sikulixscriptpath': '',
		'pathforpicturegeneration': ''
	},
	'searchformelementsbyname': true,
	'addmetainformationclicking': false,
	'thetreetagisenabledbydefault': true,
	'vanessarun': true,
	'vanessashutdown': true,
	'closetestclient': true,
	'createlogs': true,
	'logpath': './BuildStatus.log'
}"
$a = $text | ConvertFrom-Json
$a | Add-Member -Type NoteProperty -Name 'commandscreenshot' -Value $irfvpath' /capture=1 /convert='
$a | Add-Member -Type NoteProperty -Name 'featurepath' -Value '%system.teamcity.build.workingDir%\features'
$a | Add-Member -Type NoteProperty -Name 'outputscreenshot' -Value '%system.teamcity.build.tempDir%\ScreenShots'
$a | Add-Member -Type NoteProperty -Name 'texterrorslogname' -Value '%system.teamcity.build.tempDir%\errors_json'
$a | Add-Member -Type NoteProperty -Name 'textlogname' -Value '%system.teamcity.build.tempDir%\test.txt'

$a | ConvertTo-Json -depth 32 | set-content %system.teamcity.build.workingDir%/va.json]]></param>
          <param name="jetbrains_powershell_script_mode" value="CODE" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_10" name="Start Coverage" type="simpleRunner">
        <conditions>
          <equals name="dep.IRP_GitHubUpdate.env.StartVA" value="true" />
        </conditions>
        <parameters>
          <param name="script.content" value="coverage-cli start --infobase %env.Database1CName% --debugger http://localhost:1550 --output %system.teamcity.build.workingDir%/Cover.csv" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_8" name="Start VA" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[start /wait "1cv8.exe" %env.PathTo1CPlatform%  %env.ConnectionTo1C% /Out %env.LogFile1C% /Execute "%env.OScript%/lib/vanessa-automation/vanessa-automation.epf" /TestManager /C"StartFeaturePlayer; VBParams=%system.teamcity.build.workingDir%/va.json"
echo ##teamcity[compilationStarted compiler='Log from 1C: %env.LogFile1C%']
sh -c "while read line; do if [[ $line == *"Error"* ]]; then echo -e ""\e[31m $line""; else echo -e ""\e[34m $line""; fi; done < ""%env.LogFile1C%"";"
echo ##teamcity[compilationFinished compiler='Log from 1C: %env.LogFile1C%']]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_11" name="Stop Coverage" type="simpleRunner">
        <parameters>
          <param name="script.content" value="coverage-cli stop" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_12" name="Cover convert" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[chcp1251
coverage-cli convert --input %system.teamcity.build.workingDir%/Cover.csv --output %system.teamcity.build.workingDir%/Cover.xml --sources src\IRP\src --fromat EDT & powershell -command "(Get-Content %system.teamcity.build.workingDir%/Cover.xml) | ForEach-Object { $_ -replace '\\', '/' } | Set-Content %system.teamcity.build.workingDir%/Cover.xml"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_9" name="" type="allureReportGeneratorRunner">
        <parameters>
          <param name="allure.publish.mode" value="ARCHIVE" />
          <param name="allure.report.path.prefix" value="allure-report" />
          <param name="allure.result.directory" value="allure/base" />
          <param name="allure.version" value="%teamcity.tool.allure.DEFAULT%" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Irp_HttpsGithubComValentinko1987irpRefsHeadsDevelop" />
    </vcs-settings>
    <requirements>
      <equals id="RQ_2" name="system.agent.name" value="Current session" />
    </requirements>
    <build-triggers>
      <build-trigger id="TRIGGER_3" type="buildDependencyTrigger">
        <parameters>
          <param name="afterSuccessfulBuildOnly" value="true" />
          <param name="branchFilter" value="+:*" />
          <param name="dependsOn" value="IRP_GitHubUpdate" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <dependencies>
      <depend-on sourceBuildTypeId="IRP_BuildCF">
        <options>
          <option name="run-build-if-dependency-failed" value="CANCEL" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

